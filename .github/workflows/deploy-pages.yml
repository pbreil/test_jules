name: Build & Deploy Angular to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  PROJECT_NAME: planet-viewer
  BASE_PATH: /test_jules/
  NODE_VERSION: 20

jobs:
  build:
    name: Build Angular
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: planet-viewer
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install --no-audit --no-fund
          fi

      - name: Build Angular (${{ env.PROJECT_NAME }}) with base-href
        run: |
          npx ng version || npx -y @angular/cli@latest ng version
          npx ng build ${{ env.PROJECT_NAME }} \
            --configuration production \
            --base-href ${{ env.BASE_PATH }} \
            --deploy-url ${{ env.BASE_PATH }}

      - name: Resolve build output folder
        id: resolve
        shell: bash
        run: |
          if [ -d "dist/${{ env.PROJECT_NAME }}/browser" ]; then
            echo "out=dist/${{ env.PROJECT_NAME }}/browser" >> "$GITHUB_OUTPUT"
          elif [ -d "dist/${{ env.PROJECT_NAME }}" ]; then
            echo "out=dist/${{ env.PROJECT_NAME }}" >> "$GITHUB_OUTPUT"
          else
            echo "Build output not found under dist/. Contents:" >&2
            ls -R dist || true
            exit 1
          fi
          echo "Using output: ${{ steps.resolve.outputs.out }}"

      - name: List build artifacts (debug)
        run: |
          echo "Resolved folder: ${{ steps.resolve.outputs.out }}"
          ls -lah "${{ steps.resolve.outputs.out }}"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.resolve.outputs.out }}

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy
        id: deploy
        uses: actions/deploy-pages@v4
